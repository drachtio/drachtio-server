
# This Jamfile is the same as Jamfile2, except that
# it tries to access prebuilt targets using absolute
# paths. It used to be broken on Windows.

import os ;

local dll-suffix = so ;
local prefix = "lib" ;
if [ os.name ] in NT
{
   if [ MATCH ^(gcc) : $toolset ]
   {
      dll-suffix = dll.a ;
      prefix = lib ;
   }
   else
   {
      dll-suffix = lib ;
      prefix = "" ;
   }
}
else if [ os.name ] in CYGWIN
{
    dll-suffix = dll ;
}
else if [ os.name ] in MACOSX
{
   dll-suffix = dylib ;
}

project ext ;

# Assumed bjam was invoked from the project root
local pwd = [ PWD ] ;

lib a :
    : <file>$(pwd)/ext/debug/$(prefix)a.$(dll-suffix) <variant>debug
    :
    : <include>debug
    ;

lib a :
    : <file>$(pwd)/ext/release/$(prefix)a.$(dll-suffix) <variant>release
    :
    : <include>release
    ;

